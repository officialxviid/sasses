////
///	            █▀    ▄▀█    █▀    █▀    █▀▀    █▀
///	            ▄█    █▀█    ▄█    ▄█    ██▄    ▄█
///	            𝑃𝑟𝑜𝑣𝑖𝑑𝑒𝑠 𝑚𝑜𝑟𝑒 𝑎𝑑𝑣𝑎𝑛𝑐𝑒𝑑 𝑆𝑎𝑠𝑠 𝑚𝑜𝑑𝑢𝑙𝑒𝑠
///
///	       (c) Copyright 2025 XVIID (https://xviid.net/)
///
///	For the full copyright and license information, please view
///	the LICENSE file that was distributed with this source code.
////

@charset 'UTF-8'

@use 'sass:list'
@use 'sass:meta'
@use 'sass:string'
@use 'join'


///
/// Returns a string stating the specified value is invalid for the given types.
///
/// @param	{List}		$types			- The types which are expected.
/// @param	{*}		$value			- The value which was received.
/// @param	{String}	$additional-message	- The additional message which describes the issue.
/// @return	{String}	
///
/// @access	internal
/// @group	ThrowModule
/// @since	1.0.0
/// @require	list.length
/// @require	list.set-nth
/// @require	list.nth
/// @require	meta.inspect
/// @require	string.unquote
/// @require	join.join
/// 
/// @author	XVIID Sass Dev <sassdev@xviid.net>
///
@function invalid-type($types, $value, $additional-message: null)
	$length: list.length($types)

	@if $length > 1
		$types: list.set-nth($types, $length, 'or #{list.nth($types, $length)}')

	$types: join.join($types, if($length > 2, ', ', ' '))
	$message: '`#{meta.inspect($value)}` is not a #{string.unquote($types)}'

	@if $additional-message
		$message: '#{$message}. #{string.unquote($additional-message)}'

	@return $message