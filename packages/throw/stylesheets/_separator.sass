////
///	            █▀    ▄▀█    █▀    █▀    █▀▀    █▀
///	            ▄█    █▀█    ▄█    ▄█    ██▄    ▄█
///	            𝑃𝑟𝑜𝑣𝑖𝑑𝑒𝑠 𝑚𝑜𝑟𝑒 𝑎𝑑𝑣𝑎𝑛𝑐𝑒𝑑 𝑆𝑎𝑠𝑠 𝑚𝑜𝑑𝑢𝑙𝑒𝑠
///
///	       (c) Copyright 2025 XVIID (https://xviid.net/)
///
///	For the full copyright and license information, please view
///	the LICENSE file that was distributed with this source code.
////

@charset 'UTF-8'

@use 'variable'
@use 'parameter'


///
/// Returns an error message stating a separator parameter received the wrong value.
///
/// @param	{String}	$context - The name of the function or mixin issuing the error.
/// @return	{String}	A string describing what values are acceptable for a separator.
///
/// @access	public
/// @group	API
/// @since	1.0.0
/// @require	parameter.parameter
/// @require	variable.variable
/// 
/// @author	XVIID Sass Dev <sassdev@xviid.net>
///
@function separator($context: null)
	$message: 'Must be "space", "comma", "slash", or "auto"'
	$name: 'separator'

	@return if($context == null, variable.variable($message, $name), parameter.parameter($message, $context, $name))


/// 
/// Alias function name of throw.separator()
///
/// @access	public
/// @group	API
/// @since	1.0.0
/// @require	separator
/// 
/// @author	XVIID Sass Dev <sassdev@xviid.net>
/// 
@function separator-exception($context: null)
	@return separator($context)


/// 
/// Use in place of parameter `@error` statements inside mixins or other control structures with CSS output (not functions) for separator error value.
/// 
/// @param	{String}	$context - The name of the function or mixin issuing the error.
/// @param	{Bool | 'warn'}	$catch [false]	- Optionally catch errors and output them as CSS comments without stopping compilation.
///
/// @output	A separator message detailing the source and error, when `$catch` is true.
///
/// @access	public
/// @group	API
/// @since	1.0.0
/// @require	variable.variable
/// @require	parameter.parameter
/// 
/// @author	XVIID Sass Dev <sassdev@xviid.net>
/// 
@mixin separator($context: null, $catch: false)
	$message: 'Must be "space", "comma", "slash", or "auto"'
	$name: 'separator'

	@if $context == null
		@include variable.variable($message, $name)

	@else
		@include parameter.parameter($message, $context, $name)


/// 
/// Alias mixin name of throw.separator()
///
/// @access	public
/// @group	API
/// @since	1.0.0
/// @require	separator
/// 
/// @author	XVIID Sass Dev <sassdev@xviid.net>
/// 
@mixin separator-exception($context: null, $catch: false)
	@include separator($context, $catch)